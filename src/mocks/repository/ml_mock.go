// Code generated by MockGen. DO NOT EDIT.
// Source: ml.go
//
// Generated by this command:
//
//	mockgen -source=ml.go -destination=../mocks/repository/ml_mock.go -package=mock_repository
//

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockMLRepositoryInterface is a mock of MLRepositoryInterface interface.
type MockMLRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMLRepositoryInterfaceMockRecorder
	isgomock struct{}
}

// MockMLRepositoryInterfaceMockRecorder is the mock recorder for MockMLRepositoryInterface.
type MockMLRepositoryInterfaceMockRecorder struct {
	mock *MockMLRepositoryInterface
}

// NewMockMLRepositoryInterface creates a new mock instance.
func NewMockMLRepositoryInterface(ctrl *gomock.Controller) *MockMLRepositoryInterface {
	mock := &MockMLRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockMLRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMLRepositoryInterface) EXPECT() *MockMLRepositoryInterfaceMockRecorder {
	return m.recorder
}

// SummarizeMessages mocks base method.
func (m *MockMLRepositoryInterface) SummarizeMessages(messages []string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SummarizeMessages", messages)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SummarizeMessages indicates an expected call of SummarizeMessages.
func (mr *MockMLRepositoryInterfaceMockRecorder) SummarizeMessages(messages any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SummarizeMessages", reflect.TypeOf((*MockMLRepositoryInterface)(nil).SummarizeMessages), messages)
}
