// Code generated by MockGen. DO NOT EDIT.
// Source: ml_service.go
//
// Generated by this command:
//
//	mockgen -source=ml_service.go -destination=../mocks/repository/ml_service_mock.go
//

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockMLServiceInterface is a mock of MLServiceInterface interface.
type MockMLServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMLServiceInterfaceMockRecorder
	isgomock struct{}
}

// MockMLServiceInterfaceMockRecorder is the mock recorder for MockMLServiceInterface.
type MockMLServiceInterfaceMockRecorder struct {
	mock *MockMLServiceInterface
}

// NewMockMLServiceInterface creates a new mock instance.
func NewMockMLServiceInterface(ctrl *gomock.Controller) *MockMLServiceInterface {
	mock := &MockMLServiceInterface{ctrl: ctrl}
	mock.recorder = &MockMLServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMLServiceInterface) EXPECT() *MockMLServiceInterfaceMockRecorder {
	return m.recorder
}

// SummarizeMessages mocks base method.
func (m *MockMLServiceInterface) SummarizeMessages(messages []string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SummarizeMessages", messages)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SummarizeMessages indicates an expected call of SummarizeMessages.
func (mr *MockMLServiceInterfaceMockRecorder) SummarizeMessages(messages any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SummarizeMessages", reflect.TypeOf((*MockMLServiceInterface)(nil).SummarizeMessages), messages)
}
